version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "835483671006"
    REGION: "eu-west-1"
    CLUSTER_NAME: "demo-k8s-cicid-cluster"
    API_ECR_REPO: "eks/api"
    DDB__ECR_REPO: "eks/dynamo"
    NODEJS_ECR_REPO: "eks/nodejs"
    PYTHON_ECR_REPO: "eks/python"
    WEBAPP_ECR_REPO: "eks/webapp"

phases:
  install: # Install AWS cli, kubectl (needed for Helm) and Helm
    commands:
      - "ls -ltr"
      - "IMAGE_TAG=$(source tags.txt && echo ${Image_Tag})"
      - "yum install -y awscli git python3"
      - "curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/darwin/amd64/aws-iam-authenticator"
      - "chmod +x ./aws-iam-authenticator"
      - "mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH"
      - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - "chmod +x kubectl"
      - "mv ./kubectl /usr/bin/kubectl"
      - "wget https://storage.googleapis.com/kubernetes-helm/helm-v2.14.0-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz"
      - "chmod +x ./linux-amd64/helm"
      - "mv ./linux-amd64/helm /usr/bin/helm"
      - echo "Cluster name is:" ${CLUSTER_NAME} "API Ecr repo is:" $API_ECR_REPO "DDB Ecr repo is:" $DDB_ECR_REPO "NodeJs Ecr repo is:" $NODEJS_ECR_REPO "Python Ecr repo is:"  $PYTHON_ECR_REPO "Webapp Ecr repo is:" $WEBAPP_ECR_REPO
  pre_build: # Add kubeconfig to access to EKS cluster, Also set the Image tag name
    commands:
      - "aws eks --region $REGION update-kubeconfig --name $CLUSTER_NAME"
  build: # Build Docker image and tag it with the commit sha
    commands:
      - cd microservices/api/ &&  docker build -t api:$IMAGE_TAG .
      - docker tag api:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$API_ECR_REPO:$IMAGE_TAG
  post_build: # Push the Docker image to the ECR
    commands:
      - $(aws ecr get-login --no-include-email --region ${REGION})
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$API_ECR_REPO:$IMAGE_TAG
      
